Template: article
Date: 9 Sep 2011
Summary: Version 0.9.10 has been released. New features include support for extending Nesta with plugins (which are distributed as Ruby gems) and the ability to mark a page as draft (which will hide it on your production site).

# Nesta 0.9.10 released

Version 0.9.10 has been released. New features include support for extending
Nesta with plugins (which are distributed as Ruby gems) and the ability to mark
a page as draft (which will hide it on your production site).

See the [plugin documentation][] for information on how to write and share
plugins. The draft functionality has been implemented with a new metadata key
called [flags][], which allows you to add boolean settings to your
pages. You can then check a page's flags in your template and modify the
web page accordingly.

[plugin documentation]: /docs/plugins
[flags]: /docs/creating-content/metadata-reference#flags

## Upgrading

If you're upgrading from 0.9.7 or later, just update your `Gemfile` and re-run
`bundle`.

    $ sed -i '' -e '/nesta/ s/0.9.[0-9]/0.9.10/' Gemfile
    $ bundle

If you're upgrading from an earlier release you'll also need to get
yourself a new copy of the `config.ru` file from the template file in the
gem:

    $ cp $(bundle show nesta)/templates/config.ru .

## The changes

Here's the CHANGES file with the full list of updates:

 * Load Nesta plugins from gems. Any gem whose name begins with
   nesta-plugin- can be used in a project by adding it to the project's
   Gemfile beneath the `gem "nesta"` line. New plugins can be created
   with the `nesta plugin:create` command.

 * Mark pages as draft by setting a flag. Draft pages won't be shown in
   production, but will be visible on your local copy of your site (as
   it's running in "development").

 * Upgraded Sinatra to version 1.2.6. Upgraded other dependencies to
   latest compatible versions.

 * Bug fix: The `stylesheet` helper method assumes that you're using
   the Sass rendering engine by default, which allows it to find .sass
   files within the gem if no matching files are found locally.
